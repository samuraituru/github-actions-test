name: CD - monitoring

# 起動条件
on:
  # firebase/functions ディレクトリ配下に変更あり && develop or main ブランチに push された時
  push:
    paths:
      - "gcp/cloud_monitoring/**"
    branches:
      - develop
      - main
  # GitHubActions のページから手動で実行できるようにする(https://docs.github.com/ja/actions/managing-workflow-runs/manually-running-a-workflow)
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      # チェックアウト
      - name: Checkout
        uses: actions/checkout@v3

      # Authenticate to Google Cloud
      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GOOGLE_CREDENTIALS_DEV }}"

      # Cloud SDK のセットアップ
      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"

      #　Alpha コンポーネントをインストール
      - name: "Preparing to use the alpha command"
        run: |
          gcloud components install alpha

      # 既にあるポリシーを削除
      - name: "Delete monitoring policy"
        run: |
          gcloud alpha monitoring policies delete projects/chat-17813/alertPolicies/ --quiet || echo "Y"
        # gcloud alpha monitoring policies list >> functions_list.txt
        # cat "functions_list.txt"
        # POLICY_LIST=(`gcloud alpha monitoring policies list | awk '{print $1}' | sed -e '1d'`)
        # for policyName in "${POLICY_LIST[@]}"
        # do
        #   echo "Current policy: $policyName"
        #   gcloud alpha monitoring policies delete $policyName
        #   done

      # # functions 関数毎にポリシーを作成
      # - name: "Create monitoring policy"
      #   run: |
      #     FUNCTIONS_LIST=(`gcloud functions list | awk '{print $1}' | sed -e '1d'`)
      #     for functionName in "${FUNCTIONS_LIST[@]}"
      #     do
      #       echo "Current function: $functionName"
      #       gcloud alpha monitoring policies create \
      #       --policy='{"displayName": '\'"$functionName"\'',"documentation": {"content": '\'"$functionName"\'',"mimeType": "text/markdown"},"conditions": [{"displayName": "Log match condition","conditionMatchedLog": {"filter": "(resource.type=\"cloud_function\" resource.labels.function_name=(\"'"$functionName"'\") resource.labels.region=\"asia-northeast1\") AND severity>=ERROR"}}],"alertStrategy": {"notificationRateLimit": {"period": "300s"},"autoClose": "604800s"},"combiner": "OR","enabled": true,"notificationChannels": ["projects/chat-17813/notificationChannels/1742812268927437863"]}'
      #       done
